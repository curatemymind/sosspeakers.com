{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js\";\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\n\nclass PublicArray extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption: selectedOption\n      });\n    };\n\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    var allProducts = null;\n    let self = this;\n    var tempStruct = [];\n    var response = fetch(`/.netlify/functions/allProducts`).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      self.setState({\n        items: JSON.stringify(responseJson)\n      });\n    });\n  }\n\n  async handleClick(priceId) {\n    const stripe = await stripePromise;\n    fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\",\n      body: priceId\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      const sessionId = responseJson.session.id;\n      console.log(sessionId);\n      stripe.redirectToCheckout({\n        sessionId: sessionId\n      });\n    });\n  }\n\n  render() {\n    const items = [];\n    const {\n      selectedOption\n    } = this.state;\n    const [count, setCount] = useState(0);\n\n    if (this.state.items != null) {\n      var parsedObj = JSON.parse(this.state.items);\n\n      for (const [index, value] of parsedObj.entries()) {\n        items.push( /*#__PURE__*/React.createElement(\"h1\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }\n        }, value.NAME));\n        items.push( /*#__PURE__*/React.createElement(\"img\", {\n          src: value.PHOTO,\n          alt: \"product image\",\n          width: \"400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }\n        }));\n        items.push( /*#__PURE__*/React.createElement(\"h2\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }\n        }, value.DESCRIPTION));\n        var dropList = [];\n\n        for (var i = 0; i < value.LINKS.length; i++) {\n          for (var key in value.LINKS[i]) {\n            if (key !== \"PRICE\" && key !== \"PRICEid\") {\n              //0 index is ALWAYS product id\n              //1 index is ALWAYS price id\n              //2 index is ALWAYS price\n              dropList.push({\n                value: value.LINKS[i][key][1],\n                label: key,\n                price: value.LINKS[i][key][2]\n              });\n            }\n          }\n        } //onChange={(e) => this.handleChange(e.value)\n\n\n        items.push( /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(Select, {\n          onChange: e => setCount(count = e.value),\n          options: dropList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 105\n          }\n        }), count));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, items);\n  }\n\n}\n\nexport default PublicArray;","map":{"version":3,"sources":["/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js"],"names":["React","useState","loadStripe","Select","stripePromise","process","env","REACT_APP_SANDBOX_PUBLISHABLE_KEY","PublicArray","Component","constructor","props","handleChange","selectedOption","setState","state","errorMessages","sessioniId","items","handleClick","bind","componentDidMount","allProducts","self","tempStruct","response","fetch","then","json","responseJson","JSON","stringify","priceId","stripe","method","body","sessionId","session","id","console","log","redirectToCheckout","render","count","setCount","parsedObj","parse","index","value","entries","push","NAME","PHOTO","DESCRIPTION","dropList","i","LINKS","length","key","label","price","e"],"mappings":"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","sourcesContent":["\n\nimport React, { useState }  from 'react'\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\n\n\nclass PublicArray extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: [],\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({selectedOption: selectedOption })\n  }\n\n  componentDidMount()\n  {\n    var allProducts = null\n    let self = this\n    var tempStruct = []\n    var response = fetch(`/.netlify/functions/allProducts`).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        self.setState({items: JSON.stringify(responseJson)})\n      });\n      \n    }\n      \n    \n    async handleClick(priceId) {\n      const stripe = await stripePromise\n     fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\", \n      body: priceId\n    }).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        const sessionId = responseJson.session.id;\n        console.log(sessionId)\n        stripe.redirectToCheckout({sessionId: sessionId})\n      });\n    }\n\n  render() {\n    const items = []\n    const { selectedOption } = this.state;\n    const [count, setCount] = useState(0);\n    if(this.state.items != null)\n    {\n      var parsedObj = JSON.parse(this.state.items)\n      for(const [index, value] of parsedObj.entries())\n      {\n        items.push(<h1 key={index}>{value.NAME}</h1>)\n        items.push(<img src={value.PHOTO} alt=\"product image\" width=\"400\"></img>)\n        items.push(<h2 key={index}>{value.DESCRIPTION}</h2>)\n        \n        var dropList = []\n        for(var i = 0; i < (value.LINKS).length; i++)\n        {\n          for(var key in value.LINKS[i])\n          {\n            if((key !== \"PRICE\") && (key !== \"PRICEid\"))\n            {\n              //0 index is ALWAYS product id\n              //1 index is ALWAYS price id\n              //2 index is ALWAYS price\n              dropList.push({value: value.LINKS[i][key][1], label: key, price: value.LINKS[i][key][2]})\n            }\n          }  \n        }\n        \n        //onChange={(e) => this.handleChange(e.value)\n        items.push(<div><Select onChange={(e) => setCount(count = e.value)} options={dropList}></Select><br></br>{count}</div>)\n      }\n    }\n    \n    \n    \n    return (\n      <div className=\"centerDiv\">\n       \n      {items}\n      \n        \n      </div>\n    )\n  }\n}\nexport default PublicArray\n"]},"metadata":{},"sourceType":"module"}