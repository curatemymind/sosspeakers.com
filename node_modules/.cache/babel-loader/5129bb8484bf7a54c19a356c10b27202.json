{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js\";\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\nvar pricesDict = [];\nconst items = [];\n\nclass PublicArray extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.returnPrice = priceId => {\n      for (var i = 0; i < this.state.inventory.length; i++) {\n        /*if(String(this.state.inventory[i][0]) === String(priceId))\n        {\n          return this.state.inventory[i][1]\n        }*/\n      }\n    };\n\n    this.handleChange = (index, productId, priceAmount) => {\n      items[index][5] = productId;\n      items[index][6] = priceAmount(this.returnPrice(productId));\n    };\n\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: null,\n      price: null,\n      inventory: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    var allProducts = null;\n    let self = this;\n    var tempStruct = [];\n    var response = fetch(`/.netlify/functions/allProducts`).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      self.setState({\n        items: JSON.stringify(responseJson)\n      });\n      var finArr = [];\n\n      for (var x = 0; x < responseJson.length; x++) {\n        var arr = [];\n\n        for (var key in responseJson[x].LINKS) {\n          var right = String(Object.values(responseJson[x].LINKS[key])).split(',');\n          arr.push([[right[1]], right[2]]);\n        }\n\n        finArr.push(arr);\n      }\n\n      self.setState({\n        inventory: finArr\n      });\n    });\n  } //pass in product id and search for it in item\n  //DO NOT TOUCH\n\n\n  async handleClick(index) {\n    var buyItem = items[index][5];\n    alert(buyItem);\n    const stripe = await stripePromise;\n    fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\",\n      body: buyItem\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      const sessionId = responseJson.session.id;\n      stripe.redirectToCheckout({\n        sessionId: sessionId\n      });\n    });\n  } //DO NOT TOUCH\n\n\n  render() {\n    if (this.state.items != null) {\n      var parsedObj = JSON.parse(this.state.items);\n\n      for (const [index, value] of parsedObj.entries()) {\n        var name = /*#__PURE__*/React.createElement(\"h1\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 20\n          }\n        }, value.NAME);\n        var img = /*#__PURE__*/React.createElement(\"img\", {\n          src: value.PHOTO,\n          alt: \"product image\",\n          width: \"400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }\n        });\n        var desc = /*#__PURE__*/React.createElement(\"h2\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }\n        }, value.DESCRIPTION);\n        var dropList = [];\n\n        for (var i = 0; i < value.LINKS.length; i++) {\n          for (var key in value.LINKS[i]) {\n            //0 index is ALWAYS product id\n            //1 index is ALWAYS price id\n            //2 index is ALWAYS price\n            pricesDict.push({\n              [value.LINKS[i][key][1]]: value.LINKS[i][key][2]\n            });\n            dropList.push({\n              value: value.LINKS[i][key][1],\n              label: key,\n              price: value.LINKS[i][key][2]\n            });\n          }\n        }\n\n        var select = /*#__PURE__*/React.createElement(Select, {\n          onChange: e => this.handleChange(index, e.value, e.price),\n          options: dropList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 22\n          }\n        });\n        var buyNow = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: e => this.handleClick(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 22\n          }\n        }, \"Buy Now\");\n        items.push([name, img, desc, select, buyNow, \"\", \"\"]);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, this.state.inventory[0], this.state.inventory.map(item => /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, item)), items[0], items[1]);\n  }\n\n}\n\nexport default PublicArray;","map":{"version":3,"sources":["/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js"],"names":["React","loadStripe","Select","stripePromise","process","env","REACT_APP_SANDBOX_PUBLISHABLE_KEY","pricesDict","items","PublicArray","Component","constructor","props","returnPrice","priceId","i","state","inventory","length","handleChange","index","productId","priceAmount","errorMessages","sessioniId","selectedOption","price","handleClick","bind","componentDidMount","allProducts","self","tempStruct","response","fetch","then","json","responseJson","setState","JSON","stringify","finArr","x","arr","key","LINKS","right","String","Object","values","split","push","buyItem","alert","stripe","method","body","sessionId","session","id","redirectToCheckout","render","parsedObj","parse","value","entries","name","NAME","img","PHOTO","desc","DESCRIPTION","dropList","label","select","e","buyNow","map","item"],"mappings":"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","sourcesContent":["\n\nimport React from 'react'\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\nvar pricesDict = []\nconst items = []\n\nclass PublicArray extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: null,\n      price: null,\n      inventory: [],\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    \n  }\n  \n  returnPrice = (priceId) => {\n    for(var i = 0; i < (this.state.inventory).length; i++)\n    {\n      /*if(String(this.state.inventory[i][0]) === String(priceId))\n      {\n        return this.state.inventory[i][1]\n      }*/\n    }\n  }\n\n  handleChange = (index, productId, priceAmount) => {\n    items[index][5] = productId\n    items[index][6] = priceAmount\n    \n    (this.returnPrice(productId))\n    \n  }\n\n  componentDidMount()\n  {\n    var allProducts = null\n    let self = this\n    var tempStruct = []\n    var response = fetch(`/.netlify/functions/allProducts`).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        self.setState({items: JSON.stringify(responseJson)})\n        \n        var finArr = []\n        \n        for(var x = 0; x < responseJson.length; x++)\n        {\n          var arr = []\n          for (var key in responseJson[x].LINKS) {\n            var right = (String(Object.values(responseJson[x].LINKS[key]))).split(',')\n            arr.push([[right[1]], right[2]])\n          }\n          finArr.push(arr)\n        }\n        \n        self.setState({inventory: finArr})\n      });\n    }\n    //pass in product id and search for it in item\n    \n    //DO NOT TOUCH\n    async handleClick(index) {\n      var buyItem = items[index][5]\n      alert(buyItem)\n      const stripe = await stripePromise\n     fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\", \n      body: buyItem\n    }).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        const sessionId = responseJson.session.id;\n        stripe.redirectToCheckout({sessionId: sessionId})\n      });\n    }\n    //DO NOT TOUCH\n\n  render() {\n    \n    if(this.state.items != null)\n    {\n      var parsedObj = JSON.parse(this.state.items)\n      \n      for(const [index, value] of parsedObj.entries())\n      {\n        \n        var name= (<h1 key={index}>{value.NAME}</h1>)\n        var img = <img src={value.PHOTO} alt=\"product image\" width=\"400\"></img>\n        var desc = <h2 key={index}>{value.DESCRIPTION}</h2>\n        \n        var dropList = []\n        for(var i = 0; i < (value.LINKS).length; i++)\n        {\n          for(var key in value.LINKS[i])\n          {\n            //0 index is ALWAYS product id\n            //1 index is ALWAYS price id\n            //2 index is ALWAYS price\n            pricesDict.push({[value.LINKS[i][key][1]]: value.LINKS[i][key][2]})\n            dropList.push({value: value.LINKS[i][key][1], label: key, price: value.LINKS[i][key][2]})\n          }  \n        }\n        var select = <Select onChange={(e) => this.handleChange(index, e.value, e.price)} options={dropList}></Select>\n        var buyNow = <button onClick={e => this.handleClick(index)}>Buy Now</button>\n        items.push([name, img, desc, select, buyNow, \"\", \"\"])\n        \n      }\n      \n    }\n    \n    \n    \n    return (\n      <div className=\"centerDiv\">\n       {this.state.inventory[0]}\n\n       {this.state.inventory.map((item) =>\n          <h1>{item}</h1>\n        )}\n      {items[0]}\n      \n\n      {items[1]}\n      \n      </div>\n    )\n  }\n}\nexport default PublicArray\n"]},"metadata":{},"sourceType":"module"}