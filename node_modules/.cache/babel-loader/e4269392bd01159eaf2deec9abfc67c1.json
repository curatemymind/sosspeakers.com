{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js\";\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\nvar pricesDict = [];\nconst items = [];\n\nclass PublicArray extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (index, productId, priceAmount) => {\n      items[index][7] = productId;\n      items[index][8] = priceAmount;\n      alert(items[index][8]);\n    };\n\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: null,\n      price: null,\n      inventory: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    var allProducts = null;\n    let self = this;\n    var tempStruct = [];\n    var response = fetch(`/.netlify/functions/allProducts`).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      self.setState({\n        items: JSON.stringify(responseJson)\n      });\n    });\n  } //pass in product id and search for it in item\n\n\n  async handleClick(index) {\n    var buyItem = items[index][7];\n    alert(buyItem);\n    const stripe = await stripePromise;\n    fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\",\n      body: buyItem\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      const sessionId = responseJson.session.id;\n      console.log(sessionId);\n      stripe.redirectToCheckout({\n        sessionId: sessionId\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n\n    if (this.state.items != null) {\n      var parsedObj = JSON.parse(this.state.items);\n\n      for (const [index, value] of parsedObj.entries()) {\n        var name = /*#__PURE__*/React.createElement(\"h1\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }\n        }, value.NAME);\n        var img = /*#__PURE__*/React.createElement(\"img\", {\n          src: value.PHOTO,\n          alt: \"product image\",\n          width: \"400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }\n        });\n        var desc = /*#__PURE__*/React.createElement(\"h2\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }\n        }, value.DESCRIPTION);\n        var dropList = [];\n\n        for (var i = 0; i < value.LINKS.length; i++) {\n          for (var key in value.LINKS[i]) {\n            if (key !== \"PRICE\" && key !== \"PRICEid\") {\n              //0 index is ALWAYS product id\n              //1 index is ALWAYS price id\n              //2 index is ALWAYS price\n              pricesDict.push({\n                [value.LINKS[i][key][1]]: value.LINKS[i][key][2]\n              });\n              dropList.push({\n                value: value.LINKS[i][key][1],\n                label: key,\n                price: value.LINKS[i][key][2]\n              });\n            }\n          }\n        }\n\n        var test = null;\n        var select = /*#__PURE__*/React.createElement(Select, {\n          onChange: e => this.handleChange(index, e.value, e.price),\n          options: dropList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 22\n          }\n        });\n        var amount = /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 22\n          }\n        }, this.state.price);\n        var buyNow = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: e => this.handleClick(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }\n        }, \"Buy Now\");\n        items.push([name, img, desc, select, amount, buyNow, \"\", \"test\"]);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, items[0], items[1]);\n  }\n\n}\n\nexport default PublicArray;","map":{"version":3,"sources":["/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js"],"names":["React","loadStripe","Select","stripePromise","process","env","REACT_APP_SANDBOX_PUBLISHABLE_KEY","pricesDict","items","PublicArray","Component","constructor","props","handleChange","index","productId","priceAmount","alert","state","errorMessages","sessioniId","selectedOption","price","inventory","handleClick","bind","componentDidMount","allProducts","self","tempStruct","response","fetch","then","json","responseJson","setState","JSON","stringify","buyItem","stripe","method","body","sessionId","session","id","console","log","redirectToCheckout","render","parsedObj","parse","value","entries","name","NAME","img","PHOTO","desc","DESCRIPTION","dropList","i","LINKS","length","key","push","label","test","select","e","amount","buyNow"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,MAAMC,aAAa,GAAGF,UAAU,CAACG,OAAO,CAACC,GAAR,CAAYC,iCAAb,CAAhC;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,MAAMC,KAAK,GAAG,EAAd;;AAEA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeJ,CAACC,KAAD,EAAQC,SAAR,EAAmBC,WAAnB,KAAmC;AAChDR,MAAAA,KAAK,CAACM,KAAD,CAAL,CAAa,CAAb,IAAkBC,SAAlB;AACAP,MAAAA,KAAK,CAACM,KAAD,CAAL,CAAa,CAAb,IAAkBE,WAAlB;AACAC,MAAAA,KAAK,CAACT,KAAK,CAACM,KAAD,CAAL,CAAa,CAAb,CAAD,CAAL;AACD,KAnBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXZ,MAAAA,KAAK,EAAE,IAHI;AAIXa,MAAAA,cAAc,EAAE,IAJL;AAKXC,MAAAA,KAAK,EAAE,IALI;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKZ,YAAL,GAAoB,KAAKA,YAAL,CAAkBY,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AASDC,EAAAA,iBAAiB,GACjB;AACE,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,QAAQ,GAAGC,KAAK,CAAE,iCAAF,CAAL,CAAyCC,IAAzC,CAA8C,UAASF,QAAT,EAAmB;AAC9E,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACC,KAFY,EAEVD,IAFU,CAEL,UAASE,YAAT,EAAuB;AAC7BN,MAAAA,IAAI,CAACO,QAAL,CAAc;AAAC3B,QAAAA,KAAK,EAAE4B,IAAI,CAACC,SAAL,CAAeH,YAAf;AAAR,OAAd;AAED,KALY,CAAf;AAOC,GAnCqC,CAoCpC;;;AAEF,QAAMV,WAAN,CAAkBV,KAAlB,EAAyB;AACvB,QAAIwB,OAAO,GAAG9B,KAAK,CAACM,KAAD,CAAL,CAAa,CAAb,CAAd;AACAG,IAAAA,KAAK,CAACqB,OAAD,CAAL;AACA,UAAMC,MAAM,GAAG,MAAMpC,aAArB;AACD4B,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC5CS,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,IAAI,EAAEH;AAFsC,KAAxC,CAAL,CAGEN,IAHF,CAGO,UAASF,QAAT,EAAmB;AACzB,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACC,KALF,EAKID,IALJ,CAKS,UAASE,YAAT,EAAuB;AAC7B,YAAMQ,SAAS,GAAGR,YAAY,CAACS,OAAb,CAAqBC,EAAvC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAH,MAAAA,MAAM,CAACQ,kBAAP,CAA0B;AAACL,QAAAA,SAAS,EAAEA;AAAZ,OAA1B;AACD,KATF;AAUA;;AAEHM,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAE3B,MAAAA;AAAF,QAAqB,KAAKH,KAAhC;;AAGA,QAAG,KAAKA,KAAL,CAAWV,KAAX,IAAoB,IAAvB,EACA;AACE,UAAIyC,SAAS,GAAGb,IAAI,CAACc,KAAL,CAAW,KAAKhC,KAAL,CAAWV,KAAtB,CAAhB;;AAEA,WAAI,MAAM,CAACM,KAAD,EAAQqC,KAAR,CAAV,IAA4BF,SAAS,CAACG,OAAV,EAA5B,EACA;AAEE,YAAIC,IAAI,gBAAG;AAAI,UAAA,GAAG,EAAEvC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBqC,KAAK,CAACG,IAAvB,CAAX;AACA,YAAIC,GAAG,gBAAG;AAAK,UAAA,GAAG,EAAEJ,KAAK,CAACK,KAAhB;AAAuB,UAAA,GAAG,EAAC,eAA3B;AAA2C,UAAA,KAAK,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACA,YAAIC,IAAI,gBAAG;AAAI,UAAA,GAAG,EAAE3C,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBqC,KAAK,CAACO,WAAvB,CAAX;AAEA,YAAIC,QAAQ,GAAG,EAAf;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAIT,KAAK,CAACU,KAAP,CAAcC,MAAjC,EAAyCF,CAAC,EAA1C,EACA;AACE,eAAI,IAAIG,GAAR,IAAeZ,KAAK,CAACU,KAAN,CAAYD,CAAZ,CAAf,EACA;AACE,gBAAIG,GAAG,KAAK,OAAT,IAAsBA,GAAG,KAAK,SAAjC,EACA;AACE;AACA;AACA;AACAxD,cAAAA,UAAU,CAACyD,IAAX,CAAgB;AAAC,iBAACb,KAAK,CAACU,KAAN,CAAYD,CAAZ,EAAeG,GAAf,EAAoB,CAApB,CAAD,GAA0BZ,KAAK,CAACU,KAAN,CAAYD,CAAZ,EAAeG,GAAf,EAAoB,CAApB;AAA3B,eAAhB;AACAJ,cAAAA,QAAQ,CAACK,IAAT,CAAc;AAACb,gBAAAA,KAAK,EAAEA,KAAK,CAACU,KAAN,CAAYD,CAAZ,EAAeG,GAAf,EAAoB,CAApB,CAAR;AAAgCE,gBAAAA,KAAK,EAAEF,GAAvC;AAA4CzC,gBAAAA,KAAK,EAAE6B,KAAK,CAACU,KAAN,CAAYD,CAAZ,EAAeG,GAAf,EAAoB,CAApB;AAAnD,eAAd;AACD;AACF;AACF;;AACD,YAAIG,IAAI,GAAG,IAAX;AACA,YAAIC,MAAM,gBAAG,oBAAC,MAAD;AAAQ,UAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKvD,YAAL,CAAkBC,KAAlB,EAAyBsD,CAAC,CAACjB,KAA3B,EAAkCiB,CAAC,CAAC9C,KAApC,CAAzB;AAAqE,UAAA,OAAO,EAAEqC,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA,YAAIU,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKnD,KAAL,CAAWI,KAAhB,CAAb;AACA,YAAIgD,MAAM,gBAAG;AAAQ,UAAA,OAAO,EAAEF,CAAC,IAAI,KAAK5C,WAAL,CAAiBV,KAAjB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAb;AACAN,QAAAA,KAAK,CAACwD,IAAN,CAAW,CAACX,IAAD,EAAOE,GAAP,EAAYE,IAAZ,EAAkBU,MAAlB,EAA0BE,MAA1B,EAAkCC,MAAlC,EAA0C,EAA1C,EAA8C,MAA9C,CAAX;AAGD;AAEF;;AAID,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC9D,KAAK,CAAC,CAAD,CAFN,EAKCA,KAAK,CAAC,CAAD,CALN,CADF;AAUD;;AA5GuC;;AA8G1C,eAAeC,WAAf","sourcesContent":["\n\nimport React from 'react'\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\nvar pricesDict = []\nconst items = []\n\nclass PublicArray extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: null,\n      price: null,\n      inventory: [],\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  \n\n  handleChange = (index, productId, priceAmount) => {\n    items[index][7] = productId\n    items[index][8] = priceAmount\n    alert(items[index][8])\n  }\n\n  componentDidMount()\n  {\n    var allProducts = null\n    let self = this\n    var tempStruct = []\n    var response = fetch(`/.netlify/functions/allProducts`).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        self.setState({items: JSON.stringify(responseJson)})\n\n      });\n      \n    }\n      //pass in product id and search for it in item\n    \n    async handleClick(index) {\n      var buyItem = items[index][7]\n      alert(buyItem)\n      const stripe = await stripePromise\n     fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\", \n      body: buyItem\n    }).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        const sessionId = responseJson.session.id;\n        console.log(sessionId)\n        stripe.redirectToCheckout({sessionId: sessionId})\n      });\n    }\n\n  render() {\n    \n    const { selectedOption } = this.state;\n\n    \n    if(this.state.items != null)\n    {\n      var parsedObj = JSON.parse(this.state.items)\n      \n      for(const [index, value] of parsedObj.entries())\n      {\n        \n        var name= (<h1 key={index}>{value.NAME}</h1>)\n        var img = <img src={value.PHOTO} alt=\"product image\" width=\"400\"></img>\n        var desc = <h2 key={index}>{value.DESCRIPTION}</h2>\n        \n        var dropList = []\n        for(var i = 0; i < (value.LINKS).length; i++)\n        {\n          for(var key in value.LINKS[i])\n          {\n            if((key !== \"PRICE\") && (key !== \"PRICEid\"))\n            {\n              //0 index is ALWAYS product id\n              //1 index is ALWAYS price id\n              //2 index is ALWAYS price\n              pricesDict.push({[value.LINKS[i][key][1]]: value.LINKS[i][key][2]})\n              dropList.push({value: value.LINKS[i][key][1], label: key, price: value.LINKS[i][key][2]})\n            }\n          }  \n        }\n        var test = null\n        var select = <Select onChange={(e) => this.handleChange(index, e.value, e.price)} options={dropList}></Select>\n        var amount = <h1>{this.state.price}</h1>\n        var buyNow = <button onClick={e => this.handleClick(index)}>Buy Now</button>\n        items.push([name, img, desc, select, amount, buyNow, \"\", \"test\"])\n        \n        \n      }\n      \n    }\n    \n    \n    \n    return (\n      <div className=\"centerDiv\">\n       \n      {items[0]}\n\n\n      {items[1]}\n      \n      </div>\n    )\n  }\n}\nexport default PublicArray\n"]},"metadata":{},"sourceType":"module"}