{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/sosspeakers.com/src/pages/Queue.js\";\nimport React from 'react';\nimport '../App.css';\nimport Navigation from './minor/Navigation';\nimport Table from 'react-bootstrap/Table';\n\nclass Queue extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      rows: []\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n    var tempRows = [];\n    fetch('https://spreadsheets.google.com/feeds/cells/18WAVyuKTaK6rdELGqWe_qiiCjGVTtJKHL0SWk6xLHDE/1/public/full?alt=json').then(res => res.json()).then(data => {\n      var index = 0;\n\n      for (var i = 0; i < data['feed']['entry'].length; i += 3) {\n        if (data['feed']['entry'][i]['gs$cell']['row'] === \"1\") {\n          continue;\n        }\n\n        console.log(data['feed']['entry'][i]['gs$cell']['inputValue']);\n        tempRows.push([data['feed']['entry'][i]['gs$cell']['inputValue'], data['feed']['entry'][i + 1]['gs$cell']['inputValue'], data['feed']['entry'][i + 2]['gs$cell']['inputValue']]);\n        index++;\n      }\n\n      self.setState({\n        rows: tempRows\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Receipt No.\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, this.state.rows.map((value, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, String(this.state.rows[index]).split(',')[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, String(this.state.rows[index]).split(',')[1]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, String(this.state.rows[index]).split(',')[2]))))), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      style: {\n        color: \"blue\",\n        fontStyle: \"bold\",\n        marginTop: '2vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \"Rank\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"Number\")))));\n  }\n\n} //((String(this.state.rows[index])).split(',')).map((innerValue, innerIndex) =>\n//((String(this.state.rows[index])).split(','))[innerIndex])\n\n\nexport default Queue;","map":{"version":3,"sources":["/Users/innovation/Desktop/sosspeakers.com/src/pages/Queue.js"],"names":["React","Navigation","Table","Queue","Component","constructor","state","rows","componentDidMount","self","tempRows","fetch","then","res","json","data","index","i","length","console","log","push","setState","render","map","value","String","split","color","fontStyle","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Navigation from './minor/Navigation'\nimport Table from 'react-bootstrap/Table'\n\nclass Queue extends React.Component { \n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      rows: []\n    };\n  }\n\n  componentDidMount()\n  {\n    let self = this;\n    var tempRows = [];\n    fetch('https://spreadsheets.google.com/feeds/cells/18WAVyuKTaK6rdELGqWe_qiiCjGVTtJKHL0SWk6xLHDE/1/public/full?alt=json').then(res => \n    res.json()).then(data => {\n      var index = 0;\n      for(var i = 0; i < data['feed']['entry'].length; i+=3)\n      {\n       if(data['feed']['entry'][i]['gs$cell']['row'] === \"1\")\n      {\n        continue;\n      }\n      console.log(data['feed']['entry'][i]['gs$cell']['inputValue'])\n      tempRows.push([\n         data['feed']['entry'][i]['gs$cell']['inputValue'],\n         data['feed']['entry'][i + 1]['gs$cell']['inputValue'],\n         data['feed']['entry'][i + 2]['gs$cell']['inputValue']\n      ])\n      index++\n      }\n\n      self.setState({rows: tempRows})\n\n      \n    })\n    \n  }\n\n \n\n  render()\n  {  \n    return (\n      <div className=\"centerDiv\">\n        <Navigation></Navigation>\n        <div className=\"contentWrapper\">  \n        <Table>  \n        <thead>\n          <tr>\n            <th>Receipt No.</th>\n            <th>Product</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        \n        <tbody>\n          {this.state.rows.map((value, index) => \n            <tr>\n              <td>{((String(this.state.rows[index])).split(','))[0]}</td>\n            \n             <td>{((String(this.state.rows[index])).split(','))[1]}</td>\n            \n              <td>{((String(this.state.rows[index])).split(','))[2]}</td>\n            </tr>\n        \n          )}\n        </tbody>\n        </Table>\n\n        <Table striped bordered style={{color: \"blue\", fontStyle: \"bold\", marginTop: '2vh'}}>\n                  <thead>\n                  <th>Rank</th>\n                  <th>Country</th>\n                  <th>Number</th>\n                  </thead>\n                  \n                  </Table>\n       \n        </div>\n      </div>\n    )              \n  }\n}\n\n  //((String(this.state.rows[index])).split(',')).map((innerValue, innerIndex) =>\n            //((String(this.state.rows[index])).split(','))[innerIndex])\n\nexport default Queue;\n\n"]},"metadata":{},"sourceType":"module"}