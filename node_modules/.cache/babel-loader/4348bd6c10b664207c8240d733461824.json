{"ast":null,"code":"import React, { useRef, useState, useLayoutEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar styles = {\n  \"container\": \"_1Lxpd\",\n  \"scrollable\": \"_2MD0k\",\n  \"horizontalSpacer\": \"_376IX\",\n  \"rowContainer\": \"_3bAl3\",\n  \"row\": \"_1iLpS\",\n  \"bubbleContainer\": \"_2gu6r\",\n  \"bubble\": \"_3cleF\",\n  \"guideContainer\": \"_2SNHQ\",\n  \"guide\": \"_2pju2\"\n};\nvar defaultOptions = {\n  size: 200,\n  minSize: 20,\n  gutter: 16,\n  provideProps: false,\n  numCols: 6,\n  fringeWidth: 100,\n  yRadius: 200,\n  xRadius: 200,\n  cornerRadius: 100,\n  showGuides: false,\n  compact: false,\n  gravitation: 0\n};\n\nfunction BubbleElement(props) {\n  if (!props.children) {\n    return null;\n  }\n\n  var options = {};\n  Object.assign(options, defaultOptions);\n  Object.assign(options, props.options);\n  options.numCols = Math.min(options.numCols, props.children.length);\n  var minProportion = options.minSize / options.size;\n  var verticalPadding = \"calc(50% - \" + (options.yRadius + options.size / 2 - options.cornerRadius * (1.414 - 1) / 1.414) + \"px)\";\n  var horizontalPadding = \"calc(50% - \" + (options.xRadius + options.size / 2 - options.cornerRadius * (1.414 - 1) / 1.414) + \"px)\";\n  var scrollable = useRef(null);\n  var rows = [];\n  var colsRemaining = 0;\n  var evenRow = true;\n\n  for (var i = 0; i < props.children.length; i++) {\n    if (colsRemaining == 0) {\n      colsRemaining = evenRow ? options.numCols - 1 : options.numCols;\n      evenRow = !evenRow;\n      rows.push([]);\n    }\n\n    rows[rows.length - 1].push(props.children[i]);\n    colsRemaining--;\n  }\n\n  if (rows.length > 1) {\n    if (rows[rows.length - 1].length % 2 == rows[rows.length - 2].length % 2) {\n      rows[rows.length - 1].push( /*#__PURE__*/React.createElement(\"div\", null));\n    }\n  }\n\n  var _useState = useState(0),\n      scrollTop = _useState[0],\n      setScrollTop = _useState[1];\n\n  var _useState2 = useState(0),\n      scrollLeft = _useState2[0],\n      setScrollLeft = _useState2[1];\n\n  var handleScroll = function handleScroll(e) {\n    if (e.target.className) {\n      setScrollTop(e.target.scrollTop);\n      setScrollLeft(e.target.scrollLeft);\n    }\n  };\n\n  useLayoutEffect(function () {\n    window.addEventListener(\"scroll\", handleScroll);\n    scrollable.current.scrollTo((scrollable.current.scrollWidth - scrollable.current.clientWidth) / 2, (scrollable.current.scrollHeight - scrollable.current.clientHeight) / 2);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  var interpolate = function interpolate(actualMin, actualMax, val, targetMin, targetMax) {\n    return (val - actualMin) / (actualMax - actualMin) * (targetMax - targetMin) + targetMin;\n  };\n\n  var getBubbleSize = function getBubbleSize(row, col) {\n    var yOffset = (options.size + options.gutter) * 0.866 * row - options.size + options.cornerRadius * (1.414 - 1) / 1.414 - (options.yRadius - options.size);\n    var xOffset = (options.size + options.gutter) * col + (options.numCols - rows[row].length) * (options.size + options.gutter) / 2 - options.size + options.cornerRadius * (1.414 - 1) / 1.414 - (options.xRadius - options.size);\n    var dy = yOffset - scrollTop;\n    var dx = xOffset - scrollLeft;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    var out = {\n      bubbleSize: 1,\n      translateX: 0,\n      translateY: 0,\n      distance: distance\n    };\n    var distanceFromEdge = 0;\n    var isInCornerRegion = false;\n\n    if (Math.abs(dx) <= options.xRadius && Math.abs(dy) <= options.yRadius) {\n      if (Math.abs(dy) > options.yRadius - options.cornerRadius && Math.abs(dx) > options.xRadius - options.cornerRadius) {\n        var distToInnerCorner = Math.sqrt(Math.pow(Math.abs(dy) - options.yRadius + options.cornerRadius, 2) + Math.pow(Math.abs(dx) - options.xRadius + options.cornerRadius, 2));\n\n        if (distToInnerCorner > options.cornerRadius) {\n          distanceFromEdge = distToInnerCorner - options.cornerRadius;\n          isInCornerRegion = true;\n        }\n      }\n    } else if (Math.abs(dx) <= options.xRadius + options.fringeWidth && Math.abs(dy) <= options.yRadius + options.fringeWidth) {\n      if (Math.abs(dy) > options.yRadius - options.cornerRadius && Math.abs(dx) > options.xRadius - options.cornerRadius) {\n        isInCornerRegion = true;\n\n        var _distToInnerCorner = Math.sqrt(Math.pow(Math.abs(dy) - options.yRadius + options.cornerRadius, 2) + Math.pow(Math.abs(dx) - options.xRadius + options.cornerRadius, 2));\n\n        distanceFromEdge = _distToInnerCorner - options.cornerRadius;\n      } else {\n        distanceFromEdge = Math.max(Math.abs(dx) - options.xRadius, Math.abs(dy) - options.yRadius);\n      }\n    } else {\n      isInCornerRegion = Math.abs(dy) > options.yRadius - options.cornerRadius && Math.abs(dx) > options.xRadius - options.cornerRadius;\n\n      if (isInCornerRegion) {\n        var _distToInnerCorner2 = Math.sqrt(Math.pow(Math.abs(dy) - options.yRadius + options.cornerRadius, 2) + Math.pow(Math.abs(dx) - options.xRadius + options.cornerRadius, 2));\n\n        distanceFromEdge = _distToInnerCorner2 - options.cornerRadius;\n      } else {\n        distanceFromEdge = Math.max(Math.abs(dx) - options.xRadius, Math.abs(dy) - options.yRadius);\n      }\n    }\n\n    out.bubbleSize = interpolate(0, options.fringeWidth, Math.min(distanceFromEdge, options.fringeWidth), 1, minProportion);\n    var translationMag = options.compact ? (options.size - options.minSize) / 2 : 0;\n    var interpolatedTranslationMag = interpolate(0, options.fringeWidth, distanceFromEdge, 0, translationMag);\n\n    if (distanceFromEdge > 0 && distanceFromEdge <= options.fringeWidth) {\n      out.translateX = interpolatedTranslationMag;\n      out.translateY = interpolatedTranslationMag;\n    } else if (distanceFromEdge - options.fringeWidth > 0) {\n      var extra = Math.max(0, distanceFromEdge - options.fringeWidth - options.size / 2) * options.gravitation / 10;\n      out.translateX = translationMag + extra;\n      out.translateY = translationMag + extra;\n    }\n\n    if (isInCornerRegion) {\n      var cornerDx = Math.abs(dx) - options.xRadius + options.cornerRadius;\n      var cornerDy = Math.abs(dy) - options.yRadius + options.cornerRadius;\n      var theta = Math.atan(-cornerDy / cornerDx);\n\n      if (dx > 0) {\n        if (dy > 0) {\n          theta *= -1;\n        }\n      } else {\n        if (dy > 0) {\n          theta += Math.PI;\n        } else {\n          theta += Math.PI - 2 * theta;\n        }\n      }\n\n      out.translateX *= -Math.cos(theta);\n      out.translateY *= -Math.sin(theta);\n    } else if (Math.abs(dx) > options.xRadius || Math.abs(dy) > options.yRadius) {\n      if (Math.abs(dx) > options.xRadius) {\n        out.translateX *= -Math.sign(dx);\n        out.translateY = 0;\n      } else {\n        out.translateY *= -Math.sign(dy);\n        out.translateX = 0;\n      }\n    }\n\n    return out;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    style: _extends({\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }, props.style)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    onScroll: handleScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.scrollable,\n    ref: scrollable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.horizontalSpacer,\n    style: {\n      height: verticalPadding\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.rowContainer,\n    style: {\n      width: options.size * options.numCols + options.gutter * (options.numCols - 1),\n      paddingLeft: horizontalPadding,\n      paddingRight: horizontalPadding\n    }\n  }, rows.map(function (row, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.row,\n      key: i,\n      style: {\n        marginTop: i > 0 ? options.size * -0.134 + options.gutter * 0.866 : 0\n      }\n    }, row.map(function (comp, j) {\n      var _getBubbleSize = getBubbleSize(i, j),\n          bubbleSize = _getBubbleSize.bubbleSize,\n          translateX = _getBubbleSize.translateX,\n          translateY = _getBubbleSize.translateY,\n          distance = _getBubbleSize.distance;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: j,\n        className: styles.bubbleContainer,\n        style: {\n          width: options.size,\n          height: options.size,\n          marginRight: options.gutter / 2,\n          marginLeft: options.gutter / 2,\n          transform: \"translateX(\" + translateX + \"px) translateY(\" + translateY + \"px) scale(\" + bubbleSize + \")\"\n        }\n      }, options.provideProps ? React.cloneElement(comp, {\n        bubbleSize: bubbleSize * options.size,\n        distanceToCenter: distance,\n        maxSize: options.size,\n        minSize: options.minSize\n      }) : comp);\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.horizontalSpacer,\n    style: {\n      height: verticalPadding\n    }\n  })), options.showGuides ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.guideContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.guide,\n    style: {\n      height: options.yRadius * 2,\n      width: options.xRadius * 2,\n      borderRadius: options.shape == \"ellipse\" ? \"50%\" : options.cornerRadius\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.guide,\n    style: {\n      height: (options.yRadius + options.fringeWidth) * 2,\n      width: (options.xRadius + options.fringeWidth) * 2,\n      borderRadius: options.shape == \"ellipse\" ? \"50%\" : options.cornerRadius + options.fringeWidth\n    }\n  })) : null));\n}\n\nexport default BubbleElement;\nexport { defaultOptions };","map":{"version":3,"sources":["../src/index.js"],"names":["defaultOptions","size","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","props","options","Object","Math","minProportion","verticalPadding","horizontalPadding","scrollable","useRef","rows","colsRemaining","evenRow","i","scrollTop","setScrollTop","useState","scrollLeft","setScrollLeft","handleScroll","e","useLayoutEffect","window","interpolate","val","actualMax","targetMax","getBubbleSize","yOffset","xOffset","dy","dx","distance","out","bubbleSize","translateX","translateY","distanceFromEdge","isInCornerRegion","distToInnerCorner","translationMag","interpolatedTranslationMag","extra","cornerDx","cornerDy","theta","display","justifyContent","alignItems","styles","height","width","paddingLeft","paddingRight","marginTop","marginRight","marginLeft","transform","distanceToCenter","maxSize","guideContainer","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport styles from \"./styles.module.css\";\n\nexport const defaultOptions = {\n  size: 200,\n  minSize: 20,\n  gutter: 16,\n  provideProps: false,\n  numCols: 6,\n  fringeWidth: 100,\n  yRadius: 200,\n  xRadius: 200,\n  cornerRadius: 100,\n  showGuides: false,\n  compact: false,\n  gravitation: 0,\n};\n\nexport default function BubbleElement(props) {\n  if (!props.children) {\n    return null;\n  }\n  let options = {};\n  Object.assign(options, defaultOptions);\n  Object.assign(options, props.options);\n  options.numCols = Math.min(options.numCols, props.children.length);\n  // console.log(options);\n\n  const minProportion = options.minSize / options.size;\n\n  const verticalPadding = `calc(50% - ${\n    options.yRadius +\n    options.size / 2 -\n    (options.cornerRadius * (1.414 - 1)) / 1.414\n  }px)`;\n  const horizontalPadding = `calc(50% - ${\n    options.xRadius +\n    options.size / 2 -\n    (options.cornerRadius * (1.414 - 1)) / 1.414\n  }px)`;\n\n  const scrollable = useRef(null);\n\n  let rows = [];\n  var colsRemaining = 0;\n  var evenRow = true;\n  for (var i = 0; i < props.children.length; i++) {\n    if (colsRemaining == 0) {\n      colsRemaining = evenRow ? options.numCols - 1 : options.numCols;\n      evenRow = !evenRow;\n      rows.push([]);\n    }\n    rows[rows.length - 1].push(props.children[i]);\n    colsRemaining--;\n  }\n  if (rows.length > 1) {\n    if (rows[rows.length - 1].length % 2 == rows[rows.length - 2].length % 2) {\n      rows[rows.length - 1].push(<div></div>); // dummy bubble\n    }\n  }\n\n  const [scrollTop, setScrollTop] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n\n  const handleScroll = (e) => {\n    // console.log(e)\n    if (e.target.className) {\n      setScrollTop(e.target.scrollTop);\n      setScrollLeft(e.target.scrollLeft);\n    }\n  };\n\n  // const handleResize = (e) => {\n  //   console.log('resize', e)\n  //   setElementHeight(container.current.clientHeight)\n  // }\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    scrollable.current.scrollTo(\n      (scrollable.current.scrollWidth - scrollable.current.clientWidth) / 2,\n      (scrollable.current.scrollHeight - scrollable.current.clientHeight) / 2\n    );\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const interpolate = (actualMin, actualMax, val, targetMin, targetMax) => {\n    return (\n      ((val - actualMin) / (actualMax - actualMin)) * (targetMax - targetMin) +\n      targetMin\n    );\n  };\n\n  const getBubbleSize = (row, col) => {\n    const yOffset =\n      (options.size + options.gutter) * 0.866 * row -\n      options.size +\n      (options.cornerRadius * (1.414 - 1)) / 1.414 -\n      (options.yRadius - options.size);\n    //  - options.cornerRadius / 1.414;\n    const xOffset =\n      (options.size + options.gutter) * col +\n      ((options.numCols - rows[row].length) * (options.size + options.gutter)) /\n        2 -\n      options.size +\n      (options.cornerRadius * (1.414 - 1)) / 1.414 -\n      (options.xRadius - options.size);\n    // - options.cornerRadius / 1.414;\n    const dy = yOffset - scrollTop;\n    const dx = xOffset - scrollLeft;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    // let theta = Math.atan(dy / dx);\n    // if (dx < 0) theta += Math.PI;\n    let out = {\n      bubbleSize: 1,\n      translateX: 0,\n      translateY: 0,\n      distance: distance,\n    };\n    let distanceFromEdge = 0;\n    let isInCornerRegion = false;\n    if (Math.abs(dx) <= options.xRadius && Math.abs(dy) <= options.yRadius) {\n      // inner square\n      if (\n        Math.abs(dy) > options.yRadius - options.cornerRadius &&\n        Math.abs(dx) > options.xRadius - options.cornerRadius\n      ) {\n        // in corner region\n        const distToInnerCorner = Math.sqrt(\n          Math.pow(Math.abs(dy) - options.yRadius + options.cornerRadius, 2) +\n            Math.pow(Math.abs(dx) - options.xRadius + options.cornerRadius, 2)\n        );\n        if (distToInnerCorner > options.cornerRadius) {\n          // outside inner radius\n          distanceFromEdge = distToInnerCorner - options.cornerRadius;\n          isInCornerRegion = true;\n        }\n      }\n    } else if (\n      Math.abs(dx) <= options.xRadius + options.fringeWidth &&\n      Math.abs(dy) <= options.yRadius + options.fringeWidth\n    ) {\n      // outer square\n      if (\n        Math.abs(dy) > options.yRadius - options.cornerRadius &&\n        Math.abs(dx) > options.xRadius - options.cornerRadius\n      ) {\n        // in corner region\n        isInCornerRegion = true;\n        const distToInnerCorner = Math.sqrt(\n          Math.pow(Math.abs(dy) - options.yRadius + options.cornerRadius, 2) +\n            Math.pow(Math.abs(dx) - options.xRadius + options.cornerRadius, 2)\n        );\n        distanceFromEdge = distToInnerCorner - options.cornerRadius;\n        // distanceFromEdge = Math.min(\n        //   distToInnerCorner - options.cornerRadius,\n        //   options.fringeWidth\n        // );\n      } else {\n        distanceFromEdge = Math.max(\n          Math.abs(dx) - options.xRadius,\n          Math.abs(dy) - options.yRadius\n        );\n      }\n    } else {\n      // outside outer square\n      isInCornerRegion =\n        Math.abs(dy) > options.yRadius - options.cornerRadius &&\n        Math.abs(dx) > options.xRadius - options.cornerRadius;\n      if (isInCornerRegion) {\n        const distToInnerCorner = Math.sqrt(\n          Math.pow(Math.abs(dy) - options.yRadius + options.cornerRadius, 2) +\n            Math.pow(Math.abs(dx) - options.xRadius + options.cornerRadius, 2)\n        );\n        distanceFromEdge = distToInnerCorner - options.cornerRadius;\n      } else {\n        distanceFromEdge = Math.max(\n          Math.abs(dx) - options.xRadius,\n          Math.abs(dy) - options.yRadius\n        );\n      }\n    }\n\n    out.bubbleSize = interpolate(\n      0,\n      options.fringeWidth,\n      Math.min(distanceFromEdge, options.fringeWidth),\n      1,\n      minProportion\n    );\n\n    //handle magnitudes\n\n    const translationMag = options.compact\n      ? (options.size - options.minSize) / 2\n      : 0;\n    const interpolatedTranslationMag = interpolate(\n      0,\n      options.fringeWidth,\n      distanceFromEdge,\n      0,\n      translationMag\n    );\n\n    if (distanceFromEdge > 0 && distanceFromEdge <= options.fringeWidth) {\n      out.translateX = interpolatedTranslationMag;\n      out.translateY = interpolatedTranslationMag;\n    } else if (distanceFromEdge - options.fringeWidth > 0) {\n      const extra =\n        (Math.max(\n          0,\n          distanceFromEdge - options.fringeWidth - options.size / 2\n        ) *\n          options.gravitation) /\n        10;\n      out.translateX = translationMag + extra;\n      out.translateY = translationMag + extra;\n    }\n\n    if (isInCornerRegion) {\n      const cornerDx = Math.abs(dx) - options.xRadius + options.cornerRadius;\n      const cornerDy = Math.abs(dy) - options.yRadius + options.cornerRadius;\n      let theta = Math.atan(-cornerDy / cornerDx);\n      if (dx > 0) {\n        if (dy > 0) {\n          theta *= -1;\n        }\n      } else {\n        if (dy > 0) {\n          theta += Math.PI;\n        } else {\n          theta += Math.PI - 2 * theta;\n        }\n      }\n      out.translateX *= -Math.cos(theta);\n      out.translateY *= -Math.sin(theta);\n    } else if (\n      Math.abs(dx) > options.xRadius ||\n      Math.abs(dy) > options.yRadius\n    ) {\n      if (Math.abs(dx) > options.xRadius) {\n        out.translateX *= -Math.sign(dx);\n        out.translateY = 0;\n      } else {\n        out.translateY *= -Math.sign(dy);\n        out.translateX = 0;\n      }\n    }\n\n    return out;\n  };\n\n  return (\n    <div\n      className={props.className}\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        ...props.style,\n      }}\n    >\n      <div className={styles.container} onScroll={handleScroll}>\n        {/* <p>{`scrollTop: ${scrollTop}`}</p>\n        <p>{`scrollLeft: ${scrollLeft}`}</p> */}\n        <div className={styles.scrollable} ref={scrollable}>\n          <div\n            className={styles.horizontalSpacer}\n            style={{\n              height: verticalPadding,\n            }}\n          ></div>\n          <div\n            className={styles.rowContainer}\n            style={{\n              width:\n                options.size * options.numCols +\n                options.gutter * (options.numCols - 1),\n              paddingLeft: horizontalPadding,\n              paddingRight: horizontalPadding,\n            }}\n          >\n            {rows.map((row, i) => {\n              return (\n                <div\n                  className={styles.row}\n                  key={i}\n                  style={{\n                    marginTop:\n                      i > 0\n                        ? options.size * -0.134 + options.gutter * 0.866 // .134 is sqrt(3) - 1\n                        : 0,\n                  }}\n                >\n                  {row.map((comp, j) => {\n                    const {\n                      bubbleSize,\n                      translateX,\n                      translateY,\n                      distance,\n                    } = getBubbleSize(i, j);\n                    return (\n                      <div\n                        key={j}\n                        className={styles.bubbleContainer}\n                        style={{\n                          width: options.size,\n                          height: options.size,\n                          marginRight: options.gutter / 2,\n                          marginLeft: options.gutter / 2,\n                          transform: `translateX(${translateX}px) translateY(${translateY}px) scale(${bubbleSize})`,\n                        }}\n                      >\n                        {options.provideProps\n                          ? React.cloneElement(comp, {\n                              bubbleSize: bubbleSize * options.size,\n                              distanceToCenter: distance,\n                              maxSize: options.size,\n                              minSize: options.minSize,\n                            })\n                          : comp}\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <div\n            className={styles.horizontalSpacer}\n            style={{\n              height: verticalPadding,\n            }}\n          ></div>\n        </div>\n\n        {options.showGuides ? (\n          <div className={styles.guideContainer}>\n            <div\n              className={styles.guide}\n              style={{\n                height: options.yRadius * 2,\n                width: options.xRadius * 2,\n                borderRadius:\n                  options.shape == \"ellipse\" ? \"50%\" : options.cornerRadius,\n              }}\n            ></div>\n            <div\n              className={styles.guide}\n              style={{\n                height: (options.yRadius + options.fringeWidth) * 2,\n                width: (options.xRadius + options.fringeWidth) * 2,\n                borderRadius:\n                  options.shape == \"ellipse\"\n                    ? \"50%\"\n                    : options.cornerRadius + options.fringeWidth,\n              }}\n            ></div>\n            {/* <div\n              style={{\n                position: \"absolute\",\n                height: `100%`,\n                width: 1,\n                backgroundColor: \"#000\",\n                left: `50%`,\n                top: 0,\n              }}\n            ></div>\n            <div\n              style={{\n                position: \"absolute\",\n                width: `100%`,\n                height: 1,\n                backgroundColor: \"#000\",\n                top: `50%`,\n                left: 0,\n              }}\n            ></div> */}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}