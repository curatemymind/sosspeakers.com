{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js\";\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\nvar pricesDict = [];\nconst items = [];\n\nclass PublicArray extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.returnPrice = priceId => {\n      for (var i = 0; i < this.state.inventory.length; i++) {\n        if (String(this.state.inventory[i][0]) === String(priceId)) {\n          alert(this.state.inventory[i][1]);\n        }\n      }\n    };\n\n    this.handleChange = (index, productId, priceAmount) => {\n      items[index][5] = productId;\n      items[index][6] = priceAmount;\n      this.returnPrice(productId);\n    };\n\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: null,\n      price: null,\n      inventory: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    var allProducts = null;\n    let self = this;\n    var tempStruct = [];\n    var response = fetch(`/.netlify/functions/allProducts`).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      self.setState({\n        items: JSON.stringify(responseJson)\n      });\n      var arr = [];\n\n      for (var x = 0; x < responseJson.length; x++) {\n        for (var key in responseJson[x].LINKS) {\n          var right = String(Object.values(responseJson[x].LINKS[key])).split(',');\n          arr.push([[right[1]], right[2]]);\n        }\n      }\n\n      self.setState({\n        inventory: arr\n      });\n    });\n  } //pass in product id and search for it in item\n  //DO NOT TOUCH\n\n\n  async handleClick(index) {\n    var buyItem = items[index][5];\n    alert(buyItem);\n    const stripe = await stripePromise;\n    fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\",\n      body: buyItem\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      const sessionId = responseJson.session.id;\n      stripe.redirectToCheckout({\n        sessionId: sessionId\n      });\n    });\n  } //DO NOT TOUCH\n\n\n  render() {\n    if (this.state.items != null) {\n      var parsedObj = JSON.parse(this.state.items);\n\n      for (const [index, value] of parsedObj.entries()) {\n        var name = /*#__PURE__*/React.createElement(\"h1\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }\n        }, value.NAME);\n        var img = /*#__PURE__*/React.createElement(\"img\", {\n          src: value.PHOTO,\n          alt: \"product image\",\n          width: \"400\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        });\n        var desc = /*#__PURE__*/React.createElement(\"h2\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 20\n          }\n        }, value.DESCRIPTION);\n        var dropList = [];\n\n        for (var i = 0; i < value.LINKS.length; i++) {\n          for (var key in value.LINKS[i]) {\n            //0 index is ALWAYS product id\n            //1 index is ALWAYS price id\n            //2 index is ALWAYS price\n            pricesDict.push({\n              [value.LINKS[i][key][1]]: value.LINKS[i][key][2]\n            });\n            dropList.push({\n              value: value.LINKS[i][key][1],\n              label: key,\n              price: value.LINKS[i][key][2]\n            });\n          }\n        }\n\n        var select = /*#__PURE__*/React.createElement(Select, {\n          onChange: e => this.handleChange(index, e.value, e.price),\n          options: dropList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }\n        });\n        var buyNow = /*#__PURE__*/React.createElement(\"button\", {\n          onClick: e => this.handleClick(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 22\n          }\n        }, \"Buy Now\");\n        items.push([name, img, desc, select, buyNow, \"\", \"\"]);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, this.state.inventory, items[0], items[1]);\n  }\n\n}\n\nexport default PublicArray;","map":{"version":3,"sources":["/Users/innovation/Desktop/sosspeakers.com/src/pages/minor/PublicArray.js"],"names":["React","loadStripe","Select","stripePromise","process","env","REACT_APP_SANDBOX_PUBLISHABLE_KEY","pricesDict","items","PublicArray","Component","constructor","props","returnPrice","priceId","i","state","inventory","length","String","alert","handleChange","index","productId","priceAmount","errorMessages","sessioniId","selectedOption","price","handleClick","bind","componentDidMount","allProducts","self","tempStruct","response","fetch","then","json","responseJson","setState","JSON","stringify","arr","x","key","LINKS","right","Object","values","split","push","buyItem","stripe","method","body","sessionId","session","id","redirectToCheckout","render","parsedObj","parse","value","entries","name","NAME","img","PHOTO","desc","DESCRIPTION","dropList","label","select","e","buyNow"],"mappings":"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","sourcesContent":["\n\nimport React from 'react'\nimport { loadStripe } from '@stripe/stripe-js';\nimport Select from 'react-select';\nconst stripePromise = loadStripe(process.env.REACT_APP_SANDBOX_PUBLISHABLE_KEY);\nvar pricesDict = []\nconst items = []\n\nclass PublicArray extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMessages: [],\n      sessioniId: null,\n      items: null,\n      selectedOption: null,\n      price: null,\n      inventory: [],\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    \n  }\n  \n  returnPrice = (priceId) => {\n    for(var i = 0; i < (this.state.inventory).length; i++)\n    {\n      \n      if(String(this.state.inventory[i][0]) === String(priceId))\n      {\n        alert(this.state.inventory[i][1])\n      }\n    }\n  }\n\n  handleChange = (index, productId, priceAmount) => {\n    items[index][5] = productId\n    items[index][6] = priceAmount\n    \n    this.returnPrice(productId)\n    \n  }\n\n  componentDidMount()\n  {\n    var allProducts = null\n    let self = this\n    var tempStruct = []\n    var response = fetch(`/.netlify/functions/allProducts`).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        self.setState({items: JSON.stringify(responseJson)})\n        var arr = []\n        \n        for(var x = 0; x < responseJson.length; x++)\n        {\n          for (var key in responseJson[x].LINKS) {\n            var right = (String(Object.values(responseJson[x].LINKS[key]))).split(',')\n            arr.push([[right[1]], right[2]])\n          }\n        }\n        self.setState({inventory: arr})\n      });\n    }\n    //pass in product id and search for it in item\n    \n    //DO NOT TOUCH\n    async handleClick(index) {\n      var buyItem = items[index][5]\n      alert(buyItem)\n      const stripe = await stripePromise\n     fetch(\"/.netlify/functions/productCheckout\", {\n      method: \"POST\", \n      body: buyItem\n    }).then(function(response) {\n      return response.json();\n      }).then(function(responseJson) {\n        const sessionId = responseJson.session.id;\n        stripe.redirectToCheckout({sessionId: sessionId})\n      });\n    }\n    //DO NOT TOUCH\n\n  render() {\n    \n    if(this.state.items != null)\n    {\n      var parsedObj = JSON.parse(this.state.items)\n      \n      for(const [index, value] of parsedObj.entries())\n      {\n        \n        var name= (<h1 key={index}>{value.NAME}</h1>)\n        var img = <img src={value.PHOTO} alt=\"product image\" width=\"400\"></img>\n        var desc = <h2 key={index}>{value.DESCRIPTION}</h2>\n        \n        var dropList = []\n        for(var i = 0; i < (value.LINKS).length; i++)\n        {\n          for(var key in value.LINKS[i])\n          {\n            //0 index is ALWAYS product id\n            //1 index is ALWAYS price id\n            //2 index is ALWAYS price\n            pricesDict.push({[value.LINKS[i][key][1]]: value.LINKS[i][key][2]})\n            dropList.push({value: value.LINKS[i][key][1], label: key, price: value.LINKS[i][key][2]})\n          }  \n        }\n        var select = <Select onChange={(e) => this.handleChange(index, e.value, e.price)} options={dropList}></Select>\n        var buyNow = <button onClick={e => this.handleClick(index)}>Buy Now</button>\n        items.push([name, img, desc, select, buyNow, \"\", \"\"])\n        \n      }\n      \n    }\n    \n    \n    \n    return (\n      <div className=\"centerDiv\">\n       {this.state.inventory}\n      {items[0]}\n      \n\n      {items[1]}\n      \n      </div>\n    )\n  }\n}\nexport default PublicArray\n"]},"metadata":{},"sourceType":"module"}